# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: hassmic.proto
# plugin: python-betterproto
from dataclasses import dataclass

import betterproto


class ClientEvent(betterproto.Enum):
    """Events that the client wants to make the server aware of"""

    UNKNOWN_EVENT = 0


@dataclass
class ClientInfo(betterproto.Message):
    """Information that the client sends about itself"""

    # The version, for example "0.9.2"
    version: str = betterproto.string_field(1)
    uuid: str = betterproto.string_field(2)


@dataclass
class Ping(betterproto.Message):
    """A ping message"""

    pass


@dataclass
class AudioData(betterproto.Message):
    data: bytes = betterproto.bytes_field(1)


@dataclass
class ClientEventOccurred(betterproto.Message):
    """Tell the server that a client event occurred"""

    event: "ClientEvent" = betterproto.enum_field(1)


@dataclass
class ClientMessage(betterproto.Message):
    """The wrapper message that actually gets sent to the server"""

    ping: "Ping" = betterproto.message_field(1, group="msg")
    client_info: "ClientInfo" = betterproto.message_field(2, group="msg")
    audio_data: "AudioData" = betterproto.message_field(3, group="msg")
    event_occurred: "ClientEvent" = betterproto.enum_field(4, group="msg")


@dataclass
class PlayAudio(betterproto.Message):
    """Play an audio file"""

    # Whether this should be an announcement or not
    announce: bool = betterproto.bool_field(1)
    # The url to play
    url: str = betterproto.string_field(2)


@dataclass
class ServerMessage(betterproto.Message):
    """The wrapper message that gets sent from the server to the client"""

    play_audio: "PlayAudio" = betterproto.message_field(1, group="msg")
